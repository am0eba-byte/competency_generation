<?xml version="1.0" encoding="UTF-8"?>
<xml>
    <!--<domains>
        <scopes>
            <string>Whole Numbers <insert idref="#sub_scope"/></string> = class="wholenum"
            <string>Integers</string>
            <string>Unit Fractions</string>
            <string>Rational Numbers</string>
            <string>Real Numbers</string>
            <string>Imaginary Numbers</string> = class="imag"
            <string>Complex Numbers</string> = class="complex"
            <string>Vectors</string>
            <string>Matrices</string>
            <string>Infinite Numbers</string>
            <string>Random Numbers</string>
            <string>Expected Values</string>
            <string>Probabilities</string>
            <string>The Plane</string>
            <string>Space</string>
            <string>Algebraic Expressions</string>
            <string>Numerical Expressions</string>
        </scopes>

        <sub_scope xml:id="sub_scope">
            <string>0</string>
            <string>1</string>
            <string>to 2</string>
            <string>to 3</string>
            <string>to 4</string>
            <string>to 5</string>
            <string>within 10</string>
            <string>within 20</string>
            <string>within 100</string>
            <string>within 120</string>
            <string>within 1000</string>
        </sub_scope>
    </domains>-->
    
   
   <!-- K-5 FOCUS DOMAINS:
            Numerical Expressions
            Algebraic Expressions
            Integers
            Rational Numbers
            Whole Numebrs (not this input - see \whole_numbers sister directory) -->
    
    
    
    <compParts>
        <processGroup>
            <process>
                <!-- SUBCLASS attribute values should be filtered according to the component this string will go with,
            the rest of the strings will not have the subclass attribute value-->
                <formalProcess>
                    <string class="int rational algexp numexp complex imag plane" subclass="notation">Read</string>
                    <string class="int rational">Recite</string>
                    <string class="int rational algexp numexp complex imag space plane" subclass="notation">Write</string>
                    <string class="int rational algexp numexp complex imag space plane">Represent</string>
                    <string class="space plane" sub="models">Represent, with images,</string>
                    <string sub="models">Represent, with sounds,</string>
                    <string class="int rational algexp numexp complex imag space plane" sub="models">Represent, with activities,</string>
                    <string sub="realia">Represent, with specimens,</string>
                    <string sub="realia">Represent, with body parts,</string>
                    <string class="int rational complex imag" sub="glyphs">Represent, with words,</string>
                    <string class="algexp numexp" sub="glyphs">Represent, with symbols,</string>
                    <string class="space plane" sub="glyphs">Represent, with drawings,</string>
                    <string class="algexp numexp space plane" sub="glyphs">Represent, with graphs,</string>
                    <string>Randomly sample</string>
                </formalProcess>
                <!-- NO notations with knowledge process sentences -->
                <knowledge>
                    <knowledgeProcess>
                        <string class="int rational complex imag space">Remember</string>
                        <string class="int rational algexp numexp complex imag space plane">Evaluate</string>
                        <string class="int rational complex imag space plane">Create</string>
                        <string class="int rational algexp numexp complex imag space" sub="strategizing">Understand</string>
                        <string class="int rational algexp numexp complex imag space" sub="strategizing">Apply</string>
                        <string class="int rational algexp numexp complex imag space plane">Analyze</string>
                        <!-- <whole_numbers_knowledge_subprocess>
                        <string class="wholenum">by putting together</string>
                        <string class="wholenum">by adding to</string>
                        <string class="wholenum">by taking apart</string>
                        <string class="wholenum">by taking from</string>
                    </whole_numbers_knowledge_subprocess>-->
                    </knowledgeProcess>
                </knowledge>
            </process>
            <!--BRANCHES HERE 
                2 options: knowledge OR formal with processPred or specific_object => end of chain
                knowledge OR formal -> mathopObject (quant) -> notation?-->
            
        </processGroup>
        <!-- END OF CHAIN -->
        
        
        <processBranch>
            <processPred>
                <string class="algexp numexp space plane">Volumes</string>
                <string class="int rational numexp complex imag plane">Numerical Expressions</string>
                <string class="int rational numexp complex imag plane">Numerical Equations</string>
                <string class="int rational complex imag space">Properties of Objects</string>
                <string class="algexp numexp complex imag">Properties of Operations</string>
                <string class="int rational algexp numexp space">Patterns</string>
                <string class="int rational complex imag">Common Factors</string>
                <string class="int rational complex imag">Multiples</string>
                <string class="int rational complex imag">Common Multiples</string>
                <string class="rational int">Place Values</string>
                <string class="space">Attributes</string>
                <string class="int rational">Standard Units</string>
                <string class="int rational">SI Units</string>
                <string class="algexp numexp space plane">Areas</string>
                <string class="algexp numexp space plane">Perimeters</string>
                <string class="int rational algexp numexp space plane">Data</string>
                <string class="space plane">Shapes</string>
                <string class="algexp numexp space plane">Surface Areas</string>
                <string class="rational int algexp numexp space plane">Realia</string>
                <string class="rational int algexp numexp space plane">Models</string>
                <string class="complex imag space plane">Congruence</string>
                <string class="complex imag space plane">Similarity</string>
                <string class="int rational">Ratios</string>
                <string class="rational int algexp">Proportions</string>
                <string class="int rational numexp complex imag">Numerical Inequalities</string>
                <string class="int rational algexp complex imag space">Algebraic Equations</string>
                <string class="int rational algexp complex imag">Algebraic Inequalities</string>
                <string class="int rational algexp numexp space plane">Lines</string>
                <string class="int rational algexp numexp space plane">Linear Equations</string>
                <string class="int rational algexp complex imag">Simultaneous Equations</string>
                <string class="algexp numexp complex imag">Statistical Variability</string>
                <string class="algexp numexp complex imag">Distributions</string>
                <string class="algexp numexp">Populations</string>
                <string class="algexp numexp complex imag">Probability Models</string>
                <string class="algexp complex imag">Bivariate Data</string>
                <string class="space">Sets</string>
                <string class="complex imag space">Elements</string>
                <string>Experiments</string>
                <string class="complex imag space plane">Observations</string>
                <string class="algexp complex imag space plane">Dependent Variables</string>
                <string class="algexp complex imag space plane">Independent Variables</string>
                <string class="int rational algexp numexp complex imag space plane">Sums</string>
                <string class="int rational algexp numexp complex imag space plane">Differences</string>
                <string class="int rational algexp numexp complex imag">Products</string>
                <string class="int rational algexp numexp complex imag">Quotients</string>
                <string class="int rational algexp numexp complex imag">Remainders</string>
                <string class="algexp numexp space plane">Groups</string>
                <string class="algexp numexp space plane">Length</string>
                <string class="algexp numexp space plane">Width</string>
                <string class="algexp numexp space plane">Depth or Height</string>
                <string class="space plane">Qualitative Attributes</string>
                <string class="space plane">Plane Figures</string>
                <string class="space plane">Objects in Space</string>
                <string class="int rational algexp complex imag">Samples</string>
                <string class="int rational algexp">Random Samples</string>
                <string class="space">Prisms and Cylinders</string>
                <string class="space">Spheres</string>
                <string class="space">Cones</string>
                <string class="space plane">Quantitative Stories</string>
            </processPred>
            <!-- REVIEW SPECIFIC OBJECT SCOPE ALIGNMENTS WITH TIM/MATH TEAM -->
            
            
            <!-- ignore further specific object generations - take specific object out of the filtering/generation (use bulk/unfiltered gen) -->
            
            <specificObject>
                <string>Pythagorean Theorem</string>
                <string>Standard Algorithm for Addition</string>
                <string>Standard Algorithm for Subtraction</string>
                <string>Standard Algorithm for Multiplication</string>
                <string>Standard Algorithm for Division</string>
                <string>European Algorithm for Subtraction</string>
                <string>Lattice Algorithm for Multiplication</string>
                <string>Common Factors</string>
                <string>Distributive Property</string>
                <string>Commutative Property</string>
                <string>Associative Property</string>
            </specificObject>
            
            <mathOPobject>
                <mathOperation>
                    <string class="complex imag">Naming</string>
                    <string class="int rational complex imag">Sequencing</string>
                    <string class="int rational complex imag">Ordering</string>
                    <string class="int rational algexp numexp complex imag space plane">Adding</string>
                    <string class="int rational algexp numexp complex imag space plane">Subtracting</string>
                    <string class="int rational algexp numexp complex imag space plane">Multiplying</string>
                    <string class="int rational algexp numexp complex imag space plane">Dividing</string>
                    <string class="int rational algexp numexp complex imag space plane">Negating</string>
                    <string class="int rational algexp numexp complex imag space plane">Exponentiating</string>
                    <string class="int rational algexp numexp complex imag space plane">Grouping</string>
                    <!-- Operations -->
                    <!--<string>Order Operations</string>-->
                </mathOperation>
                <!-- -->
                <quant>
                    <string class="int rational algexp numexp complex imag space plane">Numbers</string>
                    <!-- putting the name of the scope INSIDE the string outputs -->
                    <string class="int rational algexp numexp complex imag plane">Terms</string>
                    <string class="int rational algexp complex imag plane">Factors</string>
                    <string class="space plane">Angles</string>
                    
                    <string class="int rational algexp complex imag space plane">Algebraic Expressions</string>
                    <string class="int rational algexp complex imag space plane">Variables</string>
                    <string class="int rational algexp numexp complex imag space plane">Functions</string>
                    <string>Chance Processes</string>
                    <string>Arrays</string>
                </quant>
            </mathOPobject>
            
        </processBranch>
        
        
        
        <!-- specific object and notation object will never occur in the same sentence output -->
        
        <!-- RATIONAL + INTEGERS ONLY:
                    fp-pp-scopeString-n 
                    fp-mathop-scopeString-n   
                    
                    ONLY read & write formalProcess strings
        -->
        
        <notationObject>
            <string class="rational">in Fractional Notation</string>
            <string class="rational">in Decimal Notation</string>
            <string class="rational int">in Proportional Notation</string>
            <string>in Addition Notation</string>
            <string>in Subtraction Notation</string>
            <string>in Multiplication Notation</string>
            <string>in Division Notation</string>
            <string class="rational int">in Radical Notation</string>
            <string class="rational int">in Exponential Notation</string>
            <string class="rational int">in Scientific Notation</string>
            <string class="rational int">in Base Ten</string>
        </notationObject>
        
    </compParts>
</xml>
