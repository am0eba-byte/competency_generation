<?xml version="1.0" encoding="UTF-8"?>
<xml><!--****************************************************--><!--*************** INTEGERS SCOPE *****************--><!--****************************************************-->
   <scopeGroup id="integers">
      <parent group="fp-pp" type="transitive"><!--INTEGERS: Formal Process(noNotObj) + Process Predicate-->
         <parentGroup match="fp-pp" lvl="1">
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
         </parentGroup>
         <compGroup id="fp-pp">
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
         </compGroup>
         <!--####################################-->
         <!--INTEGERS: Formal Process (keyed to notation) + Process Predicate + Notation Object-->
         <!--####################################-->
         <notationParent>
            <parentGroup match="fp-pp-no" lvl="2">
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
            </parentGroup>
            <compGroup id="fp-pp-no">
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Expressions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Properties of Objects</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Patterns</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Factors</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Common Multiples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Place Values</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Standard Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>SI Units</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Data</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Realia</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Models</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Ratios</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Proportions</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Numerical Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Algebraic Inequalities</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Lines</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Linear Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Simultaneous Equations</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sets</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Sums</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Differences</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Products</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Quotients</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Remainders</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <processPred>Random Samples</processPred>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
            </compGroup>
         </notationParent>
      </parent>
      <parent group="fp-mathop" type="transitive"><!--####################################--><!--INTEGERS: Formal Process + Math Operation + Quant Object--><!--####################################-->
         <parentGroup match="fp-mathop" lvl="1">
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
         </parentGroup>
         <compGroup id="fp-mathop">
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Read</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Recite</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Write</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with activities,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Represent, with words,</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <formalProcess>Randomly sample</formalProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
         </compGroup>
         <!--####################################-->
         <!--INTEGERS: Formal Process (keyed to notation) + Math Operation + Quant Object + Notation Object-->
         <!--####################################-->
         <notationParent>
            <parentGroup match="fp-mathop-no" lvl="2">
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
            </parentGroup>
            <compGroup id="fp-mathop-no">
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Read</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Sequencing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Ordering</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Adding</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Subtracting</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Multiplying</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Dividing</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Negating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Exponentiating</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Numbers</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Terms</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Factors</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Algebraic Expressions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Variables</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Functions</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Proportional Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Radical Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Exponential Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Scientific Notation</notationObject>
               </componentSentence>
               <componentSentence>
                  <formalProcess>Write</formalProcess>
                  <mathOperation>Grouping</mathOperation>
                  <quant>Arrays</quant>
                  <scopeName>involving Integers</scopeName>
                  <notationObject>in Base Ten</notationObject>
               </componentSentence>
            </compGroup>
         </notationParent>
      </parent>
      <!--####################################-->
      <!--INTEGERS: Knowledge Process + Process Pred-->
      <!--####################################-->
      <parent group="kp-pp" type="transitive">
         <parentGroup match="kp-pp" lvl="1">
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Patterns</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Common Factors</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Common Multiples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Place Values</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Standard Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>SI Units</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Data</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Realia</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Models</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Ratios</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Proportions</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Lines</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Linear Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Sets</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Sums</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Differences</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Products</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Quotients</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Remainders</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Samples</processPred>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Random Samples</processPred>
            </componentSentence>
         </parentGroup>
         <compGroup id="kp-pp">
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Create</knowledgeProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Numerical Expressions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Numerical Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Properties of Objects</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Patterns</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Common Factors</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Common Multiples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Place Values</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Standard Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>SI Units</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Data</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Realia</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Models</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Ratios</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Proportions</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Numerical Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Algebraic Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Algebraic Inequalities</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Lines</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Linear Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Simultaneous Equations</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Sets</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Sums</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Differences</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Products</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Quotients</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Remainders</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <processPred>Random Samples</processPred>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
         </compGroup>
      </parent>
      <!--####################################-->
      <!--INTEGERS: Knowledge Process + Math Operation + Quant Object-->
      <!--####################################-->
      <parent group="kp-mathop" type="transitive">
         <parentGroup match="kp-mathop" lvl="1">
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
            </componentSentence>
         </parentGroup>
         <compGroup id="kp-mathop">
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Remember</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Evaluate</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Understand</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Apply</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Sequencing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Ordering</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Adding</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Subtracting</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Multiplying</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Dividing</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Negating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Exponentiating</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Numbers</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Terms</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Factors</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Algebraic Expressions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Variables</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Functions</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
            <componentSentence>
               <knowledgeProcess>Analyze</knowledgeProcess>
               <mathOperation>Grouping</mathOperation>
               <quant>Arrays</quant>
               <scopeName>involving Integers</scopeName>
            </componentSentence>
         </compGroup>
      </parent>
   </scopeGroup>
</xml>
